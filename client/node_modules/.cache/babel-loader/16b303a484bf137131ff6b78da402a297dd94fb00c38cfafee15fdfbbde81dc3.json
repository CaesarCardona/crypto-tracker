{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/Apps/crypto-tracker/client/src/components/CoinChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Tooltip, Legend, TimeScale } from \"chart.js\";\nimport \"chartjs-adapter-date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Tooltip, Legend, TimeScale);\n\n// Supported coins\nconst supportedCoins = [{\n  id: \"bitcoin\",\n  name: \"Bitcoin\"\n}, {\n  id: \"ethereum\",\n  name: \"Ethereum\"\n}, {\n  id: \"solana\",\n  name: \"Solana\"\n}, {\n  id: \"cardano\",\n  name: \"Cardano\"\n}, {\n  id: \"dogecoin\",\n  name: \"Dogecoin\"\n}];\nconst timeOptions = {\n  \"1D\": 1,\n  \"7D\": 7,\n  \"30D\": 30,\n  \"1Y\": 365,\n  \"5Y\": 1825,\n  \"10Y\": 3650,\n  \"All\": \"max\"\n};\nconst CoinChart = () => {\n  _s();\n  const [coinId, setCoinId] = useState(\"bitcoin\");\n  const [days, setDays] = useState(30);\n  const [chartData, setChartData] = useState(null);\n  useEffect(() => {\n    const fetchChart = async () => {\n      try {\n        const res = await fetch(`https://api.coingecko.com/api/v3/coins/${coinId}/market_chart?vs_currency=usd&days=${days}`);\n        const data = await res.json();\n        const chart = {\n          labels: data.prices.map(p => new Date(p[0])),\n          datasets: [{\n            label: `${coinId.toUpperCase()} Price (USD)`,\n            data: data.prices.map(p => p[1]),\n            fill: false,\n            borderColor: \"#007bff\",\n            tension: 0.3\n          }]\n        };\n        setChartData(chart);\n      } catch (err) {\n        console.error(\"Chart load error:\", err);\n      }\n    };\n    fetchChart();\n  }, [coinId, days]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"40px\",\n      padding: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Crypto Price Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Select Coin:\", \" \", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: coinId,\n        onChange: e => setCoinId(e.target.value),\n        children: supportedCoins.map(coin => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: coin.id,\n          children: coin.name\n        }, coin.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"10px\",\n        marginBottom: \"10px\"\n      },\n      children: Object.entries(timeOptions).map(([label, value]) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setDays(value),\n        style: {\n          marginRight: \"5px\",\n          padding: \"5px 10px\",\n          backgroundColor: value === days ? \"#007bff\" : \"#f0f0f0\",\n          color: value === days ? \"#fff\" : \"#000\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\"\n        },\n        children: label\n      }, label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), chartData ? /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading chart...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 48\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(CoinChart, \"kIS+K7DR36ZO0jf2VK4SLenH9QE=\");\n_c = CoinChart;\nexport default CoinChart;\nvar _c;\n$RefreshReg$(_c, \"CoinChart\");","map":{"version":3,"names":["React","useEffect","useState","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Tooltip","Legend","TimeScale","jsxDEV","_jsxDEV","register","supportedCoins","id","name","timeOptions","CoinChart","_s","coinId","setCoinId","days","setDays","chartData","setChartData","fetchChart","res","fetch","data","json","chart","labels","prices","map","p","Date","datasets","label","toUpperCase","fill","borderColor","tension","err","console","error","style","marginTop","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","coin","marginBottom","Object","entries","onClick","marginRight","backgroundColor","color","border","borderRadius","cursor","_c","$RefreshReg$"],"sources":["/home/user/Documents/Apps/crypto-tracker/client/src/components/CoinChart.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Tooltip,\n  Legend,\n  TimeScale,\n} from \"chart.js\";\nimport \"chartjs-adapter-date-fns\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Tooltip,\n  Legend,\n  TimeScale\n);\n\n// Supported coins\nconst supportedCoins = [\n  { id: \"bitcoin\", name: \"Bitcoin\" },\n  { id: \"ethereum\", name: \"Ethereum\" },\n  { id: \"solana\", name: \"Solana\" },\n  { id: \"cardano\", name: \"Cardano\" },\n  { id: \"dogecoin\", name: \"Dogecoin\" },\n];\n\nconst timeOptions = {\n  \"1D\": 1,\n  \"7D\": 7,\n  \"30D\": 30,\n  \"1Y\": 365,\n  \"5Y\": 1825,\n  \"10Y\": 3650,\n  \"All\": \"max\",\n};\n\nconst CoinChart = () => {\n  const [coinId, setCoinId] = useState(\"bitcoin\");\n  const [days, setDays] = useState(30);\n  const [chartData, setChartData] = useState(null);\n\n  useEffect(() => {\n    const fetchChart = async () => {\n      try {\n        const res = await fetch(\n          `https://api.coingecko.com/api/v3/coins/${coinId}/market_chart?vs_currency=usd&days=${days}`\n        );\n        const data = await res.json();\n        const chart = {\n          labels: data.prices.map(p => new Date(p[0])),\n          datasets: [\n            {\n              label: `${coinId.toUpperCase()} Price (USD)`,\n              data: data.prices.map(p => p[1]),\n              fill: false,\n              borderColor: \"#007bff\",\n              tension: 0.3,\n            },\n          ],\n        };\n        setChartData(chart);\n      } catch (err) {\n        console.error(\"Chart load error:\", err);\n      }\n    };\n\n    fetchChart();\n  }, [coinId, days]);\n\n  return (\n    <div style={{ marginTop: \"40px\", padding: \"10px\" }}>\n      <h2>Crypto Price Chart</h2>\n\n      {/* Coin selector */}\n      <label>\n        Select Coin:{\" \"}\n        <select\n          value={coinId}\n          onChange={e => setCoinId(e.target.value)}\n        >\n          {supportedCoins.map(coin => (\n            <option key={coin.id} value={coin.id}>\n              {coin.name}\n            </option>\n          ))}\n        </select>\n      </label>\n\n      {/* Time range buttons */}\n      <div style={{ marginTop: \"10px\", marginBottom: \"10px\" }}>\n        {Object.entries(timeOptions).map(([label, value]) => (\n          <button\n            key={label}\n            onClick={() => setDays(value)}\n            style={{\n              marginRight: \"5px\",\n              padding: \"5px 10px\",\n              backgroundColor: value === days ? \"#007bff\" : \"#f0f0f0\",\n              color: value === days ? \"#fff\" : \"#000\",\n              border: \"1px solid #ccc\",\n              borderRadius: \"4px\",\n              cursor: \"pointer\",\n            }}\n          >\n            {label}\n          </button>\n        ))}\n      </div>\n\n      {/* Line chart */}\n      {chartData ? <Line data={chartData} /> : <p>Loading chart...</p>}\n    </div>\n  );\n};\n\nexport default CoinChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}